package util.statemachine.implementation.propnet.gen;

import util.statemachine.implementation.propnet.NativePropNetStateMachine;
import util.statemachine.implementation.propnet.NativeMachineState;
import java.util.*;

public class StateMachine1336033821156 extends NativePropNetStateMachine {
	public StateMachine1336033821156() {
		super();
		components = new boolean[203];
		terminalIdx = 101;
		initIdx = 0;
		roleIndices.put("robot", 0);
		addRole("robot");
		moveMap.put("( does robot ( u a b ) )", 20);
		moveMap.put("( does robot ( s c a ) )", 21);
		moveMap.put("( does robot ( s b a ) )", 22);
		moveMap.put("( does robot ( s a b ) )", 23);
		moveMap.put("( does robot ( u c a ) )", 24);
		moveMap.put("( does robot ( s a c ) )", 25);
		moveMap.put("( does robot ( u a c ) )", 26);
		moveMap.put("( does robot ( s a a ) )", 27);
		moveMap.put("( does robot ( s c c ) )", 28);
		moveMap.put("( does robot ( u b b ) )", 29);
		moveMap.put("( does robot ( s c b ) )", 30);
		moveMap.put("( does robot ( s b b ) )", 31);
		moveMap.put("( does robot ( s b c ) )", 32);
		moveMap.put("( does robot ( u c b ) )", 33);
		moveMap.put("( does robot ( u a a ) )", 34);
		moveMap.put("( does robot ( u c c ) )", 35);
		moveMap.put("( does robot ( u b a ) )", 36);
		moveMap.put("( does robot ( u b c ) )", 37);
	}
	public void updateBase() {
		components[1] = components[130];
		components[2] = components[187];
		components[3] = components[177];
		components[4] = components[173];
		components[5] = components[182];
		components[6] = components[185];
		components[7] = components[135];
		components[8] = components[142];
		components[9] = components[176];
		components[10] = components[193];
		components[11] = components[138];
		components[12] = components[153];
		components[13] = components[202];
		components[14] = components[197];
		components[15] = components[86];
		components[16] = components[69];
		components[17] = components[178];
		components[18] = components[47];
		components[19] = components[149];
	}
	public int getGoal(int roleIdx) {
		switch (roleIdx) {
		case 0:
			if (components[117]) return 0;
			if (components[114]) return 100;
			break;
		}
		throw new RuntimeException("bad goal");
	}
	public void mark() {
		components[38] = components[8];
		components[39] = components[30] || components[28] || components[21];
		components[40] = !components[5];
		components[41] = components[12] && components[7] && components[13];
		components[42] = components[32] || components[25] || components[28];
		components[43] = components[31] || components[32] || components[22];
		components[44] = components[12] && components[2];
		components[45] = components[31] || components[30] || components[23];
		components[46] = components[15];
		components[47] = components[46];
		components[48] = components[19] && components[7] && components[13];
		components[49] = components[3] && components[19];
		components[50] = components[49];
		components[51] = components[25] || components[27] || components[23];
		components[52] = components[5] && components[13];
		components[53] = components[45];
		components[54] = components[53] && components[19];
		components[55] = components[5] && components[10];
		components[56] = components[13] && components[14];
		components[57] = components[41];
		components[58] = components[12] && components[10];
		components[59] = components[55] || components[18];
		components[60] = components[26] || components[20] || components[34];
		components[61] = components[60];
		components[62] = components[6] && components[61];
		components[63] = components[4] && components[61];
		components[64] = components[61] && components[14];
		components[65] = components[3] && components[61];
		components[66] = components[53] && components[12];
		components[67] = components[51];
		components[68] = components[67] && components[11];
		components[69] = components[0];
		components[70] = components[12] && components[13] && components[1];
		components[71] = components[24] || components[35] || components[33];
		components[72] = components[71];
		components[73] = components[72] && components[2];
		components[74] = components[72] && components[5];
		components[75] = components[72] && components[14];
		components[76] = components[72] && components[10];
		components[77] = components[72] && components[17];
		components[78] = components[5] && components[61];
		components[79] = components[19] && components[9];
		components[80] = components[79];
		components[81] = components[70];
		components[82] = components[12] && components[11] && components[19];
		components[83] = components[82];
		components[84] = components[9] && components[61];
		components[85] = components[5] && components[10];
		components[86] = components[38];
		components[87] = components[48];
		components[88] = components[39];
		components[89] = components[88] && components[1];
		components[90] = components[52];
		components[91] = components[27] || components[22] || components[21];
		components[92] = components[91];
		components[93] = components[92] && components[13];
		components[94] = components[19] && components[92];
		components[95] = !components[10];
		components[96] = components[40] || components[95];
		components[97] = components[37] || components[36] || components[29];
		components[98] = components[43];
		components[99] = components[98] && components[1];
		components[100] = components[98] && components[11];
		components[101] = components[59];
		components[102] = components[97];
		components[103] = components[102] && components[9];
		components[104] = components[102] && components[4];
		components[105] = components[102] && components[10];
		components[106] = components[44];
		components[107] = components[42];
		components[108] = components[12] && components[107];
		components[109] = components[19] && components[4];
		components[110] = components[109];
		components[111] = components[58];
		components[112] = components[72] && components[6];
		components[113] = components[102] && components[2];
		components[114] = components[85];
		components[115] = components[67] && components[7];
		components[116] = components[7] && components[88];
		components[117] = components[96];
		components[118] = components[12] && components[17];
		components[119] = components[12] && components[19] && components[1];
		components[120] = components[119];
		components[121] = components[118];
		components[122] = components[56];
		components[123] = components[37] || components[24] || components[36] || components[26] || components[35] || components[20] || components[34] || components[33] || components[29];
		components[124] = components[123];
		components[125] = components[11] && components[124];
		components[126] = components[1] && components[124];
		components[127] = components[26] || components[89] || components[126] || components[20] || components[99] || components[34];
		components[128] = components[127];
		components[129] = components[0] || components[128];
		components[130] = components[129];
		components[131] = components[7] && components[124];
		components[132] = components[37] || components[115] || components[116] || components[36] || components[131] || components[29];
		components[133] = components[132];
		components[134] = components[133] || components[0];
		components[135] = components[134];
		components[136] = components[24] || components[68] || components[35] || components[125] || components[100] || components[33];
		components[137] = components[136];
		components[138] = components[137];
		components[139] = components[102] && components[17];
		components[140] = components[37] || components[24] || components[36] || components[26] || components[35] || components[20] || components[34] || components[29] || components[33];
		components[141] = components[16];
		components[142] = components[141];
		components[143] = components[140];
		components[144] = components[143] && components[19];
		components[145] = components[143] && components[13];
		components[146] = components[54] || components[37] || components[26] || components[35] || components[94] || components[144];
		components[147] = components[146];
		components[148] = components[147] || components[0];
		components[149] = components[148];
		components[150] = components[12] && components[143];
		components[151] = components[150] || components[24] || components[36] || components[34] || components[108] || components[66];
		components[152] = components[151];
		components[153] = components[152];
		components[154] = components[3] && components[102];
		components[155] = components[32] || components[31] || components[25] || components[30] || components[27] || components[28] || components[22] || components[23] || components[21];
		components[156] = components[155];
		components[157] = components[6] && components[156];
		components[158] = components[17] && components[156];
		components[159] = components[4] && components[156];
		components[160] = components[158] || components[25] || components[77] || components[139];
		components[161] = components[156] && components[14];
		components[162] = components[75] || components[161] || components[64] || components[22];
		components[163] = components[9] && components[156];
		components[164] = components[84] || components[103] || components[21] || components[163];
		components[165] = components[160];
		components[166] = components[3] && components[156];
		components[167] = components[154] || components[166] || components[65] || components[30];
		components[168] = components[167];
		components[169] = components[156] && components[2];
		components[170] = components[169] || components[73] || components[27] || components[113];
		components[171] = components[104] || components[63] || components[28] || components[159];
		components[172] = components[171];
		components[173] = components[172];
		components[174] = components[164];
		components[175] = components[174] || components[0];
		components[176] = components[175];
		components[177] = components[168];
		components[178] = components[165];
		components[179] = components[5] && components[156];
		components[180] = components[32] || components[74] || components[179] || components[78];
		components[181] = components[180];
		components[182] = components[181];
		components[183] = components[31] || components[62] || components[112] || components[157];
		components[184] = components[183];
		components[185] = components[184];
		components[186] = components[170];
		components[187] = components[186];
		components[188] = components[6] && components[13];
		components[189] = components[188];
		components[190] = components[10] && components[156];
		components[191] = components[76] || components[105] || components[190] || components[23];
		components[192] = components[191];
		components[193] = components[192];
		components[194] = components[11] && components[19] && components[13];
		components[195] = components[194];
		components[196] = components[162];
		components[197] = components[196];
		components[198] = components[13] && components[107];
		components[199] = components[93] || components[20] || components[145] || components[33] || components[29] || components[198];
		components[200] = components[199];
		components[201] = components[200] || components[0];
		components[202] = components[201];
	}
	public NativeMachineState getStateFromBase() {
		NativeMachineState state = new NativeMachineState();
		if (components[1]) state.add(1);
		if (components[2]) state.add(2);
		if (components[3]) state.add(3);
		if (components[4]) state.add(4);
		if (components[5]) state.add(5);
		if (components[6]) state.add(6);
		if (components[7]) state.add(7);
		if (components[8]) state.add(8);
		if (components[9]) state.add(9);
		if (components[10]) state.add(10);
		if (components[11]) state.add(11);
		if (components[12]) state.add(12);
		if (components[13]) state.add(13);
		if (components[14]) state.add(14);
		if (components[15]) state.add(15);
		if (components[16]) state.add(16);
		if (components[17]) state.add(17);
		if (components[18]) state.add(18);
		if (components[19]) state.add(19);
		return state;
	}
	public Set<Integer> getLegalMoves(int roleIdx) {
		Set<Integer> moves = new HashSet<Integer>();
		switch (roleIdx) {
		case 0:
			if (components[195]) moves.add(195);
			if (components[87]) moves.add(87);
			if (components[120]) moves.add(120);
			if (components[57]) moves.add(57);
			if (components[121]) moves.add(121);
			if (components[90]) moves.add(90);
			if (components[83]) moves.add(83);
			if (components[111]) moves.add(111);
			if (components[122]) moves.add(122);
			if (components[81]) moves.add(81);
			if (components[50]) moves.add(50);
			if (components[110]) moves.add(110);
			if (components[189]) moves.add(189);
			if (components[106]) moves.add(106);
			if (components[80]) moves.add(80);
			break;
		}
		return moves;
	}
}
